<!DOCTYPE html>
<html lang="zh">
@include('layout.head')

<body>
@include('layout.nav')

<div class="d-flex">
    @include('layout.sidebar')

    <div class="shadow-lg  p-10 m-2 documentation is-dark" :class="{'expanded': ! sidebar}">
        <div class="row">

            <div class="col-11">
                <div data-bs-spy="scroll" data-bs-target="#navbar-example3" data-bs-smooth-scroll="true" class="scrollspy-example-2" tabindex="0">
                    <div id="item-1">
                        <h2 class="blog-post-title mb-1">Usage</h2>
                        {{-- section: main info and intro --}}
                        <div class="alert alert-primary" role="alert">
                            <i class="fa-solid fa-tags"></i>
                            After going through the <a href="{{ url('doc/unipartite/scheme') }}" target="_blank"
                                                       class="stretched-link text-danger" style="position: relative;">concept</a>,
                            <a href="{{ url('doc/unipartite/unigraph') }}" target="_blank"
                               class="stretched-link text-danger" style="position: relative;">definition</a>, and
                            <a href="{{ url('doc/unipartite/scheme') }}" target="_blank"
                               class="stretched-link text-danger" style="position: relative;">biological implication</a> of
                            <strong>the edge unipartite graph (LocRRCs)</strong> of a residue pair,
                            we use this tutorial to give a one-stop implementation of LocRRCs
                            of residue pairs and perform the feature assignment through
                            the <strong>seqNetRR</strong> library.
                        </div>

                        {{-- section: example dataset reminder --}}
                        <div class="alert alert-danger" role="alert">
                            <i class="fa-solid fa-circle-check"></i>
                            Please make sure that the TMKit example dataset has been downloaded
                            before you walk through the tutorial (please refer to
                            <a href="{{ url('doc/exdataset') }}" target="_blank" class="stretched-link text-info" style="position: relative;">
                                here</a>).
                        </div>
                    </div>

                    <div id="item-1-1">
                        <h2>1. Example usage</h2>
                        <div class="alert alert-secondary" role="alert">
                            <i class="fa-solid fa-file-pen"></i>
                            We can directly generate GlobRRCs and assign
                            co-evolutionary features to them. The final results are saved in a file
                            <code>./data/output.txt</code> where each row means the
                            co-evolutionary features of GlobRRCs for a residue pair.
                        </div>
                        <pre><code class="language-python">import tmkit as tmk

tmk.edge.extract(
    method='unipartite',
    fasta_fpn='data/fasta/1xqfA.fasta',
    net_fpn='data/rrc/tool/1xqfA.evfold',
    window_size=5,
    seq_sep_inferior=0,
    seq_sep_superior=None,
    pair_mode='patch',
    assign_mode='hash',
    input_kind='freecontact',
    is_sv=True,
    sv_fpn='./data/output.txt',
)</code></pre>

                    </div>

                    <div id="item-1-2">
                        <h2>2. Parameters</h2>
                        {{-- section: parameter illustration --}}
                        <div class="alert alert-warning" role="alert">
                            <i class="fa-solid fa-gear"></i>
                            <strong>Parameter illustration</strong>
                            <br><code>input_kind</code> - feature format that is regulated by a co-evolution method, such ccmpred, freeContact, gdca, or plmc.
                            <br><code>fpn</code> - path where a covariance matrix (co-evolutionary features) is placed. The covariance matrix should be generated by either CCMPred, FreeContact, GDCA, or plm-DCA. Or, a file that contains three columns (the 1st two for residue pair IDs and the 3rd one for co-evolutionary strengths) is fine.
                            <br><code>assign_mode</code> - method to generate GlobRRCs. It can be 'hash', 'hash_rf', 'hash_ori', 'pandas', or 'numpy'.
                            <br><code>window_size</code> - window size.
                            <br><code>window_m_ids</code> - list of residue pairs after applying a window.
                            <br><code>sequence</code> - molecular sequence.
                            <br><code>seq_sep_inferior</code> - The lower bounds of how far any two residues are in pairs.
                            <br><code>seq_sep_superior</code> - The upper bounds of how far any two residues are in pairs.
                            <br><code>is_sv</code> - if saving result, <code>True</code> or <code>False</code>. If <code>False</code>, you can assign sv_fpn <code>None</code>.
                            <br><code>sv_fpn</code> - path to save the result.

                            <br>->see <a href="{{ url('doc/feature') }}" target="_blank"
                                         class="stretched-link text-info" style="position: relative;">here</a>
                            for understanding our naming system of parameters.
                        </div>
                    </div>

                    <div id="item-1-3">
                        <h2>3. Output</h2>
                        {{-- section: output --}}
                        <div class="alert alert-secondary" role="alert">
                            <i class="fa-solid fa-file-pen"></i>
                            Finally, you will see the following output.
                        </div>
                        <div class="alert alert-dark" role="alert">
                            <i class="fa-solid fa-print"></i>
                            <strong>Output</strong>
                            <pre><code class="language-python">===>Molecular sequence: AVADKADNAFMMICTALVLFMTIPGIALFYGGLIRGKNVLSMLTQVTVTFALVCILWVVYGYSLAFGEGNNFFGNINWLMLKNIELTAVMGSIYQYIHVAFQGSFACITVGLIVGALAERIRFSAVLIFVVVWLTLSYIPIAHMVWGGGLLASHGALDFAGGTVVHINAAIAGLVGAYLPHNLPMVFTGTAILYIGWFGFNAGSAGTANEIAALAFVNTVVATAAAILGWIFGEWALRGKPSLLGACSGAIAGLVGVTPACGYIGVGGALIIGVVAGLAGLWGVTMPCDVFGVHGVCGIVGCIMTGIFAASSLGGVGFAEGVTMGHQLLVQLESIAITIVWSGVVAFIGYKLADLTVGLRVP
===>Molecule length: 362
===>Window size: 5
===>Sequence separation inferior: 0
===>Sequence separation superior: None
===>Mode: internal
===>Input kind: freecontact
===>pair number: 65341
=========>Window molecule generation: 0.5069675445556641s.
======>unipartite pair assignment: 3.2129993438720703s.
===>total time: 3.8409998416900635s.
===>saving...
===>saved!</code></pre>
                        </div>
                    </div>

                </div>
            </div>

            <div class="col-1"></div>
        </div>
    </div>

    <div class="d-flex flex-column flex-shrink-0 p-3 bg-light" style="width: 280px;">
        <nav id="navbar-example3" class="h-100 flex-column align-items-stretch pe-4 border-end">
            <nav class="nav nav-pills flex-column">
                <a class="nav-link" href="#item-1">Pipeline</a>
                <nav class="nav nav-pills flex-column">
                    <a class="nav-link ms-3 my-1" href="#item-1-1">1. Sequence reading</a>
                    <a class="nav-link ms-3 my-1" href="#item-1-2">2. Building block pairs</a>
                    <a class="nav-link ms-3 my-1" href="#item-1-3">3. Position list</a>
                </nav>
            </nav>
        </nav>
    </div>
</div>


@include('layout.footer')
</body>

@include('layout.script')
</html>
